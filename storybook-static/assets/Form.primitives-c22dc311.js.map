{"version":3,"file":"Form.primitives-c22dc311.js","sources":["../../src/components/Form.primitives.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from \"react-hook-form\";\n\nimport { cn } from \"../utils/cn\";\nimport Label from \"./Label\";\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName;\n};\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n);\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  );\n};\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext);\n  const itemContext = React.useContext(FormItemContext);\n  const { getFieldState, formState } = useFormContext();\n\n  const fieldState = getFieldState(fieldContext.name, formState);\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\");\n  }\n\n  const { id } = itemContext;\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  };\n};\n\ntype FormItemContextValue = {\n  id: string;\n};\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n);\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId();\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div\n        ref={ref}\n        className={cn(\"space-y-2 flex flex-col\", className)}\n        {...props}\n      />\n    </FormItemContext.Provider>\n  );\n});\nFormItem.displayName = \"FormItem\";\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof Label>,\n  React.ComponentPropsWithoutRef<typeof Label>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField();\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(className, error && \"text-red-500\")}\n      htmlFor={formItemId}\n      {...props}\n    />\n  );\n});\nFormLabel.displayName = \"FormLabel\";\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } =\n    useFormField();\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  );\n});\nFormControl.displayName = \"FormControl\";\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField();\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-gray-500\", className)}\n      {...props}\n    />\n  );\n});\nFormDescription.displayName = \"FormDescription\";\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField();\n  const body = error ? String(error?.message) : children;\n\n  if (!body) {\n    return null;\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-red-500\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  );\n});\nFormMessage.displayName = \"FormMessage\";\n\nexport {\n  //   useFormField,\n  FormProvider,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n};\n"],"names":["FormFieldContext","React.createContext","FormField","props","jsx","Controller","useFormField","fieldContext","React.useContext","itemContext","FormItemContext","getFieldState","formState","useFormContext","fieldState","id","FormItem","React.forwardRef","className","ref","React.useId","cn","FormLabel","error","formItemId","Label","FormControl","formDescriptionId","formMessageId","Slot","FormDescription","FormMessage","children","body"],"mappings":"yPAqBA,MAAAA,EAAAC,EAAA,cAA+B,CAAA,CAE/B,EAEAC,EAAA,CAAA,CAGE,GAAAC,CAEF,IACEC,EAAAA,IAAAJ,EAAA,SAAA,CAAA,MAAA,CAAA,KAAAG,EAAA,IAAA,EAAA,SAAAC,EAAAA,IAAAC,EAAA,CAAA,GAAAF,CAAA,CAAA,CAAA,CAAA,EAOFG,EAAA,IAAA,CACE,MAAAC,EAAAC,aAAAR,CAAA,EACAS,EAAAD,aAAAE,CAAA,EACA,CAAA,cAAAC,EAAA,UAAAC,CAAA,EAAAC,EAAA,EAEAC,EAAAH,EAAAJ,EAAA,KAAAK,CAAA,EAEA,GAAA,CAAAL,EACE,MAAA,IAAA,MAAA,gDAAA,EAGF,KAAA,CAAA,GAAAQ,CAAA,EAAAN,EAEA,MAAA,CAAO,GAAAM,EACL,KAAAR,EAAA,KACmB,WAAA,GAAAQ,cACJ,kBAAA,GAAAA,0BACO,cAAA,GAAAA,sBACJ,GAAAD,CACf,CAEP,EAMAJ,EAAAT,EAAA,cAA8B,CAAA,CAE9B,EAEAe,EAAAC,EAAA,WAAA,CAAA,CAAA,UAAAC,EAAA,GAAAf,CAAA,EAAAgB,IAAA,CAIE,MAAAJ,EAAAK,EAAAA,QAEA,OAAAhB,EAAA,IAAAM,EAAA,SAAA,CAAA,MAAA,CAAA,GAAAK,CAAA,EAAA,SAAAX,EAAA,IAEI,MAAC,CAAA,IAAAe,EACC,UAAAE,EAAA,0BAAAH,CAAA,EACkD,GAAAf,CAC9C,CAAA,CAAA,CAAA,CAIZ,CAAA,EACAa,EAAA,YAAA,WAEA,MAAAM,EAAAL,EAAA,WAAA,CAAA,CAAA,UAAAC,EAAA,GAAAf,CAAA,EAAAgB,IAAA,CAIE,KAAA,CAAA,MAAAI,EAAA,WAAAC,CAAA,EAAAlB,EAAA,EAEA,OAAAF,EAAA,IACEqB,EAAC,CAAA,IAAAN,EACC,UAAAE,EAAAH,EAAAK,GAAA,cAAA,EACgD,QAAAC,EACvC,GAAArB,CACL,CAAA,CAGV,CAAA,EACAmB,EAAA,YAAA,YAEA,MAAAI,EAAAT,EAAAA,WAAA,CAAA,CAAA,GAAAd,CAAA,EAAAgB,IAAA,CAIE,KAAA,CAAA,MAAAI,EAAA,WAAAC,EAAA,kBAAAG,EAAA,cAAAC,CAAA,EAAAtB,IAGA,OAAAF,EAAA,IACEyB,EAAC,CAAA,IAAAV,EACC,GAAAK,EACI,mBAAAD,EAAA,GAAAI,KAAAC,IAAA,GAAAD,IAI0B,eAAA,CAAA,CAAAJ,EAEd,GAAApB,CACZ,CAAA,CAGV,CAAA,EACAuB,EAAA,YAAA,cAEA,MAAAI,EAAAb,EAAA,WAAA,CAAA,CAAA,UAAAC,EAAA,GAAAf,CAAA,EAAAgB,IAAA,CAIE,KAAA,CAAA,kBAAAQ,GAAArB,IAEA,OAAAF,EAAA,IACE,IAAC,CAAA,IAAAe,EACC,GAAAQ,EACI,UAAAN,EAAA,wBAAAH,CAAA,EAC4C,GAAAf,CAC5C,CAAA,CAGV,CAAA,EACA2B,EAAA,YAAA,kBAEA,MAAAC,EAAAd,EAAA,WAAA,CAAA,CAAA,UAAAC,EAAA,SAAAc,EAAA,GAAA7B,CAAA,EAAAgB,IAAA,CAIE,KAAA,CAAA,MAAAI,EAAA,cAAAK,CAAA,EAAAtB,EAAA,EACA2B,EAAAV,EAAA,OAAAA,GAAA,YAAAA,EAAA,OAAA,EAAAS,EAEA,OAAAC,EAIA7B,EAAA,IACE,IAAC,CAAA,IAAAe,EACC,GAAAS,EACI,UAAAP,EAAA,mCAAAH,CAAA,EACuD,GAAAf,EACvD,SAAA8B,CAEH,CAAA,EAVH,IAaJ,CAAA,EACAF,EAAA,YAAA"}