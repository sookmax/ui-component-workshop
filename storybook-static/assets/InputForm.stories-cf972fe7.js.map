{"version":3,"file":"InputForm.stories-cf972fe7.js","sources":["../../src/components/InputForm.tsx"],"sourcesContent":["\"use client\";\n\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport * as z from \"zod\";\n\nimport { Button } from \"./Button\";\nimport {\n  FormProvider,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"./Form.primitives\";\nimport Input from \"./Input\";\nimport { toast } from \"./Toast.hooks\";\n\nconst FormSchema = z.object({\n  username: z.string().min(2, {\n    message: \"Username must be at least 2 characters.\",\n  }),\n});\n\nexport default function InputForm() {\n  const form = useForm<z.infer<typeof FormSchema>>({\n    resolver: zodResolver(FormSchema),\n    defaultValues: {\n      username: \"\",\n    },\n  });\n\n  function onSubmit(data: z.infer<typeof FormSchema>) {\n    toast({\n      title: \"You submitted the following values:\",\n      description: (\n        <pre className=\"mt-2 w-[340px] rounded-md bg-slate-950 p-4\">\n          <code className=\"text-white\">{JSON.stringify(data, null, 2)}</code>\n        </pre>\n      ),\n    });\n  }\n\n  return (\n    <FormProvider {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n        <FormField\n          control={form.control}\n          name=\"username\"\n          render={({ field }) => {\n            return (\n              <FormItem>\n                <FormLabel>Username</FormLabel>\n                <FormControl>\n                  <Input placeholder=\"shadcn\" {...field} />\n                </FormControl>\n                <FormDescription>\n                  This is your public display name.\n                </FormDescription>\n                <FormMessage />\n              </FormItem>\n            );\n          }}\n        />\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </FormProvider>\n  );\n}\n"],"names":["FormSchema","z.object","z.string","InputForm","form","useForm","zodResolver","onSubmit","data","toast","jsx","FormProvider","jsxs","FormField","field","FormItem","FormLabel","FormControl","Input","FormDescription","FormMessage","Button"],"mappings":"muBAmBA,MAAMA,EAAaC,EAAS,CAC1B,SAAUC,EAAS,EAAE,IAAI,EAAG,CAC1B,QAAS,yCAAA,CACV,CACH,CAAC,EAED,SAAwBC,GAAY,CAClC,MAAMC,EAAOC,EAAoC,CAC/C,SAAUC,EAAYN,CAAU,EAChC,cAAe,CACb,SAAU,EACZ,CAAA,CACD,EAED,SAASO,EAASC,EAAkC,CAC5CC,EAAA,CACJ,MAAO,sCACP,YACEC,EAAAA,IAAC,MAAI,CAAA,UAAU,6CACb,SAACA,EAAA,IAAA,OAAA,CAAK,UAAU,aAAc,cAAK,UAAUF,EAAM,KAAM,CAAC,CAAE,CAAA,EAC9D,CAAA,CAEH,CACH,CAEA,OACGE,EAAAA,IAAAC,EAAA,CAAc,GAAGP,EAChB,SAACQ,EAAAA,KAAA,OAAA,CAAK,SAAUR,EAAK,aAAaG,CAAQ,EAAG,UAAU,YACrD,SAAA,CAAAG,EAAA,IAACG,EAAA,CACC,QAAST,EAAK,QACd,KAAK,WACL,OAAQ,CAAC,CAAE,MAAAU,YAENC,EACC,CAAA,SAAA,CAAAL,EAAAA,IAACM,GAAU,SAAQ,UAAA,CAAA,EACnBN,EAAAA,IAACO,GACC,SAACP,MAAAQ,EAAA,CAAM,YAAY,SAAU,GAAGJ,EAAO,CACzC,CAAA,EACAJ,EAAAA,IAACS,GAAgB,SAEjB,mCAAA,CAAA,QACCC,EAAY,EAAA,CACf,CAAA,CAAA,CAEJ,CACF,EACCV,EAAA,IAAAW,EAAA,CAAO,KAAK,SAAS,SAAM,SAAA,CAAA,CAC9B,CAAA,CACF,CAAA,CAEJ"}