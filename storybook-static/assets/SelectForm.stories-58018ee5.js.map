{"version":3,"file":"SelectForm.stories-58018ee5.js","sources":["../../src/components/SelectForm.tsx"],"sourcesContent":["\"use client\";\n\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport * as z from \"zod\";\n\nimport { Button } from \"./Button\";\n// import {\n//   Form,\n//   FormControl,\n//   FormDescription,\n//   FormField,\n//   FormItem,\n//   FormLabel,\n//   FormMessage,\n// } from \"@/registry/default/ui/form\"\nimport * as SelectPrimitive from \"./Select.primitives\";\nimport { toast } from \"./Toast.hooks\";\nimport WithLabel2 from \"./WithLabel2\";\nimport { useId } from \"react\";\nimport Label from \"./Label\";\nimport { cn } from \"../utils/cn\";\n\nconst FormSchema = z.object({\n  email: z\n    .string({\n      required_error: \"Please select an email to display.\",\n    })\n    .email(),\n});\n\nexport default function SelectForm() {\n  const form = useForm<z.infer<typeof FormSchema>>({\n    resolver: zodResolver(FormSchema),\n    defaultValues: {\n      email: \"\",\n    },\n  });\n\n  const emailInputId = useId();\n\n  function onSubmit(data: z.infer<typeof FormSchema>) {\n    toast({\n      title: \"You submitted the following values:\",\n      description: (\n        <pre className=\"mt-2 w-[340px] rounded-md bg-slate-950 p-4\">\n          <code className=\"text-white\">{JSON.stringify(data, null, 2)}</code>\n        </pre>\n      ),\n    });\n  }\n\n  return (\n    <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n      <div className=\"space-y-2\">\n        <WithLabel2\n          label={({ className }) => (\n            <Label\n              htmlFor={emailInputId}\n              className={cn(\n                className,\n                form.formState.errors.email && \"text-red-500\"\n              )}\n            >\n              Email\n            </Label>\n          )}\n          target={({ className }) => (\n            <Controller\n              name=\"email\"\n              control={form.control}\n              render={({ field }) => {\n                return (\n                  <SelectPrimitive.Root\n                    value={field.value}\n                    onValueChange={(value) => {\n                      console.log(value);\n                      value && field.onChange(value);\n                    }}\n                  >\n                    <SelectPrimitive.Trigger\n                      className={cn(\n                        className,\n                        form.formState.errors.email\n                          ? \"border-red-500 focus:ring-red-700\"\n                          : \"border-gray-300 focus:ring-cyan-600\"\n                      )}\n                      name={field.name}\n                      onBlur={field.onBlur}\n                      ref={field.ref}\n                    >\n                      <SelectPrimitive.Value asChild>\n                        <span className={cn(!field.value && \"text-gray-400\")}>\n                          {field.value || \"Select a verified email to display\"}\n                        </span>\n                      </SelectPrimitive.Value>\n                    </SelectPrimitive.Trigger>\n                    <SelectPrimitive.Content>\n                      <SelectPrimitive.Item value=\"m@example.com\">\n                        m@example.com\n                      </SelectPrimitive.Item>\n                      <SelectPrimitive.Item value=\"m@google.com\">\n                        m@google.com\n                      </SelectPrimitive.Item>\n                      <SelectPrimitive.Item value=\"m@support.com\">\n                        m@support.com\n                      </SelectPrimitive.Item>\n                    </SelectPrimitive.Content>\n                  </SelectPrimitive.Root>\n                );\n              }}\n            />\n          )}\n        />\n        <p\n          className={cn(\n            \"text-xs text-red-500\",\n            form.formState.errors.email ? \"visible\" : \"invisible\"\n          )}\n        >\n          {form.formState.errors.email?.message || \"error message placeholder\"}\n        </p>\n      </div>\n      <Button type=\"submit\">Submit</Button>\n    </form>\n  );\n}\n"],"names":["FormSchema","z.object","z.string","SelectForm","form","useForm","zodResolver","emailInputId","useId","onSubmit","data","toast","jsx","jsxs","WithLabel2","className","Label","cn","Controller","field","SelectPrimitive.Root","value","SelectPrimitive.Trigger","SelectPrimitive.Value","SelectPrimitive.Content","SelectPrimitive.Item","_a","Button"],"mappings":"8gCAuBA,MAAMA,EAAaC,EAAS,CAC1B,MAAOC,EACG,CACN,eAAgB,oCACjB,CAAA,EACA,MAAM,CACX,CAAC,EAED,SAAwBC,GAAa,OACnC,MAAMC,EAAOC,EAAoC,CAC/C,SAAUC,EAAYN,CAAU,EAChC,cAAe,CACb,MAAO,EACT,CAAA,CACD,EAEKO,EAAeC,EAAAA,QAErB,SAASC,EAASC,EAAkC,CAC5CC,EAAA,CACJ,MAAO,sCACP,YACEC,EAAAA,IAAC,MAAI,CAAA,UAAU,6CACb,SAACA,EAAA,IAAA,OAAA,CAAK,UAAU,aAAc,cAAK,UAAUF,EAAM,KAAM,CAAC,CAAE,CAAA,EAC9D,CAAA,CAEH,CACH,CAGE,OAAAG,OAAC,QAAK,SAAUT,EAAK,aAAaK,CAAQ,EAAG,UAAU,YACrD,SAAA,CAACI,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAD,EAAA,IAACE,EAAA,CACC,MAAO,CAAC,CAAE,UAAAC,CAAA,IACRH,EAAA,IAACI,EAAA,CACC,QAAST,EACT,UAAWU,EACTF,EACAX,EAAK,UAAU,OAAO,OAAS,cACjC,EACD,SAAA,OAAA,CAED,EAEF,OAAQ,CAAC,CAAE,UAAAW,CAAA,IACTH,EAAA,IAACM,EAAA,CACC,KAAK,QACL,QAASd,EAAK,QACd,OAAQ,CAAC,CAAE,MAAAe,KAEPN,EAAA,KAACO,EAAA,CACC,MAAOD,EAAM,MACb,cAAgBE,GAAU,CACxB,QAAQ,IAAIA,CAAK,EACRA,GAAAF,EAAM,SAASE,CAAK,CAC/B,EAEA,SAAA,CAAAT,EAAA,IAACU,EAAA,CACC,UAAWL,EACTF,EACAX,EAAK,UAAU,OAAO,MAClB,oCACA,qCACN,EACA,KAAMe,EAAM,KACZ,OAAQA,EAAM,OACd,IAAKA,EAAM,IAEX,eAACI,EAAA,CAAsB,QAAO,GAC5B,eAAC,OAAK,CAAA,UAAWN,EAAG,CAACE,EAAM,OAAS,eAAe,EAChD,SAAMA,EAAA,OAAS,oCAClB,CAAA,EACF,CAAA,CACF,EACAN,OAACW,EAAA,CACC,SAAA,CAAAZ,EAAA,IAACa,EAAA,CAAqB,MAAM,gBAAgB,SAE5C,gBAAA,QACCA,EAAA,CAAqB,MAAM,eAAe,SAE3C,eAAA,QACCA,EAAA,CAAqB,MAAM,gBAAgB,SAE5C,gBAAA,CAAA,EACF,CAAA,CAAA,CAAA,CAGN,CACF,CAAA,CAEJ,EACAb,EAAA,IAAC,IAAA,CACC,UAAWK,EACT,uBACAb,EAAK,UAAU,OAAO,MAAQ,UAAY,WAC5C,EAEC,WAAKsB,EAAAtB,EAAA,UAAU,OAAO,QAAjB,YAAAsB,EAAwB,UAAW,2BAAA,CAC3C,CAAA,EACF,EACCd,EAAA,IAAAe,EAAA,CAAO,KAAK,SAAS,SAAM,SAAA,CAC9B,CAAA,CAAA,CAEJ"}