{"version":3,"file":"CheckboxForm1.stories-68b0dd28.js","sources":["../../src/components/CheckboxForm1.tsx"],"sourcesContent":["\"use client\";\n\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport * as z from \"zod\";\n\nimport { Button } from \"./Button\";\nimport { Checkbox } from \"./Checkbox\";\nimport {\n  FormProvider,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n} from \"./Form.primitives\";\nimport { toast } from \"./Toast.hooks\";\n\nconst FormSchema = z.object({\n  mobile: z.boolean().default(false).optional(),\n});\n\nexport function CheckboxForm1() {\n  const form = useForm<z.infer<typeof FormSchema>>({\n    resolver: zodResolver(FormSchema),\n    defaultValues: {\n      mobile: true,\n    },\n  });\n\n  function onSubmit(data: z.infer<typeof FormSchema>) {\n    toast({\n      title: \"You submitted the following values:\",\n      description: (\n        <pre className=\"mt-2 w-[340px] rounded-md bg-slate-950 p-4\">\n          <code className=\"text-white\">{JSON.stringify(data, null, 2)}</code>\n        </pre>\n      ),\n    });\n  }\n\n  return (\n    <FormProvider {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n        <FormField\n          control={form.control}\n          name=\"mobile\"\n          render={({ field }) => (\n            <FormItem className=\"flex flex-row items-start space-x-3 space-y-0 rounded-md border p-4\">\n              <FormControl>\n                <Checkbox\n                  checked={field.value}\n                  onCheckedChange={field.onChange}\n                />\n              </FormControl>\n              <div className=\"space-y-1 leading-none\">\n                <FormLabel>\n                  Use different settings for my mobile devices\n                </FormLabel>\n                <FormDescription>\n                  You can manage your mobile notifications in the mobile\n                  settings page.\n                </FormDescription>\n              </div>\n            </FormItem>\n          )}\n        />\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </FormProvider>\n  );\n}\n"],"names":["FormSchema","z.object","z.boolean","CheckboxForm1","form","useForm","zodResolver","onSubmit","data","toast","jsx","FormProvider","jsxs","FormField","field","FormItem","FormControl","Checkbox","FormLabel","FormDescription","Button"],"mappings":"k2BAkBA,MAAMA,EAAaC,EAAS,CAC1B,OAAQC,IAAY,QAAQ,EAAK,EAAE,SAAS,CAC9C,CAAC,EAEM,SAASC,GAAgB,CAC9B,MAAMC,EAAOC,EAAoC,CAC/C,SAAUC,EAAYN,CAAU,EAChC,cAAe,CACb,OAAQ,EACV,CAAA,CACD,EAED,SAASO,EAASC,EAAkC,CAC5CC,EAAA,CACJ,MAAO,sCACP,YACEC,EAAAA,IAAC,MAAI,CAAA,UAAU,6CACb,SAACA,EAAA,IAAA,OAAA,CAAK,UAAU,aAAc,cAAK,UAAUF,EAAM,KAAM,CAAC,CAAE,CAAA,EAC9D,CAAA,CAEH,CACH,CAEA,OACGE,EAAAA,IAAAC,EAAA,CAAc,GAAGP,EAChB,SAACQ,EAAAA,KAAA,OAAA,CAAK,SAAUR,EAAK,aAAaG,CAAQ,EAAG,UAAU,YACrD,SAAA,CAAAG,EAAA,IAACG,EAAA,CACC,QAAST,EAAK,QACd,KAAK,SACL,OAAQ,CAAC,CAAE,MAAAU,KACRF,EAAAA,KAAAG,EAAA,CAAS,UAAU,sEAClB,SAAA,CAAAL,MAACM,EACC,CAAA,SAAAN,EAAA,IAACO,EAAA,CACC,QAASH,EAAM,MACf,gBAAiBA,EAAM,QAAA,CAAA,EAE3B,EACAF,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAF,EAAAA,IAACQ,GAAU,SAEX,8CAAA,CAAA,EACAR,EAAAA,IAACS,GAAgB,SAGjB,uEAAA,CAAA,CAAA,EACF,CAAA,EACF,CAAA,CAEJ,EACCT,EAAA,IAAAU,EAAA,CAAO,KAAK,SAAS,SAAM,SAAA,CAAA,CAC9B,CAAA,CACF,CAAA,CAEJ"}