{"version":3,"file":"FormBasic2.stories-0e251f1a.js","sources":["../../src/components/FormBasic2.tsx"],"sourcesContent":["import { useId, useState } from \"react\";\nimport * as SelectPrimitive from \"./Select.primitives\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { Button } from \"./Button\";\nimport { cn } from \"../utils/cn\";\nimport Label from \"./Label\";\nimport WithLabel2 from \"./WithLabel2\";\nimport Input from \"./Input\";\n\nconst ICE_CREAM_TYPE = [\n  { value: \"chocolate\", label: \"Chocolate\" },\n  { value: \"strawberry\", label: \"Strawberry\" },\n  { value: \"vanilla\", label: \"Vanilla\" },\n];\n\nexport default function FormBasic2() {\n  const nameInputId = useId();\n  const emailInputId = useId();\n  const iceCreamTypeSelectId = useId();\n\n  const {\n    register,\n    control,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<{\n    name: string;\n    email: string;\n    iceCreamType: string;\n  }>({\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      iceCreamType: \"\",\n    },\n  });\n\n  console.log(\"errors\", errors);\n\n  return (\n    <form\n      noValidate\n      onSubmit={handleSubmit((data) => {\n        console.log(\"submitted data\", data);\n      })}\n    >\n      <div className=\"space-y-5\">\n        <WithLabel2\n          label={({ className }) => (\n            <Label htmlFor={nameInputId} className={className}>\n              Name\n            </Label>\n          )}\n          target={({ className }) => (\n            <Input\n              id={nameInputId}\n              type=\"text\"\n              placeholder=\"John Doe\"\n              className={className}\n              {...register(\"name\")}\n            />\n          )}\n        />\n        <div className=\"space-y-1\">\n          <WithLabel2\n            label={({ className }) => (\n              <Label\n                htmlFor={emailInputId}\n                className={cn(className, errors.email && \"text-red-500\")}\n              >\n                Email\n                <span className=\"text-red-600\" aria-label=\"required\">\n                  *\n                </span>\n              </Label>\n            )}\n            target={({ className }) => (\n              <Input\n                id={emailInputId}\n                type=\"email\"\n                placeholder=\"john.doe@gmail.com\"\n                className={cn(\n                  className,\n                  errors.email && \"border-red-500 focus-visible:ring-red-700\"\n                )}\n                {...register(\"email\", {\n                  required: \"Please provide your email.\",\n                  pattern: {\n                    value: /[A-Za-z0-9_.]+@[A-Za-z]+\\.[A-Za-z]+$/,\n                    message:\n                      \"Email should be in the form of 'john_h.doe@gmail.com'\",\n                  },\n                })}\n              />\n            )}\n          />\n          {errors.email && (\n            <p className=\"text-xs text-red-500\">{errors.email.message}</p>\n          )}\n        </div>\n        <div className=\"space-y-1\">\n          <WithLabel2\n            label={({ className }) => (\n              <Label\n                htmlFor={iceCreamTypeSelectId}\n                className={cn(className, errors.iceCreamType && \"text-red-500\")}\n              >\n                Ice cream\n                <span aria-label=\"required\" className=\"text-red-600\">\n                  *\n                </span>\n              </Label>\n            )}\n            target={({ className }) => {\n              return (\n                <Controller\n                  name=\"iceCreamType\"\n                  control={control}\n                  rules={{\n                    required: \"Please select your favorite ice cream flavor!\",\n                  }}\n                  render={({\n                    field: { value, onChange, onBlur, ref, name },\n                  }) => {\n                    const selectedItem = ICE_CREAM_TYPE.find(\n                      (item) => item.value === value\n                    );\n\n                    return (\n                      <SelectPrimitive.Root\n                        value={value}\n                        onValueChange={(value) => {\n                          // console.log(value);\n                          onChange(value);\n                        }}\n                      >\n                        <SelectPrimitive.Trigger\n                          className={cn(\n                            className,\n                            errors.iceCreamType\n                              ? \"border-red-500 focus:ring-red-700\"\n                              : \"border-gray-300 focus:ring-cyan-600\"\n                          )}\n                          name={name}\n                          onBlur={onBlur}\n                          ref={ref}\n                        >\n                          <SelectPrimitive.Value asChild>\n                            <span className={cn(!value && \"text-gray-400\")}>\n                              {selectedItem?.label || \"Choose ice cream flavor\"}\n                            </span>\n                          </SelectPrimitive.Value>\n                        </SelectPrimitive.Trigger>\n                        <SelectPrimitive.Content>\n                          {ICE_CREAM_TYPE.map((item) => (\n                            <SelectPrimitive.Item\n                              key={item.value}\n                              value={item.value}\n                            >\n                              <SelectPrimitive.ItemText>\n                                {item.label ? item.label : item.value}\n                              </SelectPrimitive.ItemText>\n                            </SelectPrimitive.Item>\n                          ))}\n                        </SelectPrimitive.Content>\n                      </SelectPrimitive.Root>\n                    );\n                  }}\n                />\n              );\n            }}\n          />\n          {errors.iceCreamType && (\n            <p className=\"text-xs text-red-500\">\n              {errors.iceCreamType.message}\n            </p>\n          )}\n        </div>\n      </div>\n      <div className=\"mt-8 flex justify-end\">\n        <Button type=\"submit\">Submit</Button>\n      </div>\n    </form>\n  );\n}\n"],"names":["ICE_CREAM_TYPE","FormBasic2","nameInputId","useId","emailInputId","iceCreamTypeSelectId","register","control","handleSubmit","errors","useForm","jsxs","data","jsx","WithLabel2","className","Label","Input","cn","Controller","value","onChange","onBlur","ref","name","selectedItem","item","SelectPrimitive.Root","SelectPrimitive.Trigger","SelectPrimitive.Value","SelectPrimitive.Content","SelectPrimitive.Item","SelectPrimitive.ItemText","Button"],"mappings":"o/BASA,MAAMA,EAAiB,CACrB,CAAE,MAAO,YAAa,MAAO,WAAY,EACzC,CAAE,MAAO,aAAc,MAAO,YAAa,EAC3C,CAAE,MAAO,UAAW,MAAO,SAAU,CACvC,EAEA,SAAwBC,GAAa,CACnC,MAAMC,EAAcC,EAAAA,QACdC,EAAeD,EAAAA,QACfE,EAAuBF,EAAAA,QAEvB,CACJ,SAAAG,EACA,QAAAC,EACA,aAAAC,EACA,UAAW,CAAE,OAAAC,CAAO,GAClBC,EAID,CACD,cAAe,CACb,KAAM,GACN,MAAO,GACP,aAAc,EAChB,CAAA,CACD,EAEO,eAAA,IAAI,SAAUD,CAAM,EAG1BE,EAAA,KAAC,OAAA,CACC,WAAU,GACV,SAAUH,EAAcI,GAAS,CACvB,QAAA,IAAI,iBAAkBA,CAAI,CAAA,CACnC,EAED,SAAA,CAACD,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAE,EAAA,IAACC,EAAA,CACC,MAAO,CAAC,CAAE,UAAAC,CAAU,UACjBC,EAAM,CAAA,QAASd,EAAa,UAAAa,EAAsB,SAEnD,MAAA,CAAA,EAEF,OAAQ,CAAC,CAAE,UAAAA,CAAA,IACTF,EAAA,IAACI,EAAA,CACC,GAAIf,EACJ,KAAK,OACL,YAAY,WACZ,UAAAa,EACC,GAAGT,EAAS,MAAM,CAAA,CACrB,CAAA,CAEJ,EACAK,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAE,EAAA,IAACC,EAAA,CACC,MAAO,CAAC,CAAE,UAAAC,CAAA,IACRJ,EAAA,KAACK,EAAA,CACC,QAASZ,EACT,UAAWc,EAAGH,EAAWN,EAAO,OAAS,cAAc,EACxD,SAAA,CAAA,cAEE,OAAK,CAAA,UAAU,eAAe,aAAW,WAAW,SAErD,IAAA,CAAA,CAAA,CACF,EAEF,OAAQ,CAAC,CAAE,UAAAM,CAAA,IACTF,EAAA,IAACI,EAAA,CACC,GAAIb,EACJ,KAAK,QACL,YAAY,qBACZ,UAAWc,EACTH,EACAN,EAAO,OAAS,2CAClB,EACC,GAAGH,EAAS,QAAS,CACpB,SAAU,6BACV,QAAS,CACP,MAAO,uCACP,QACE,uDACJ,CAAA,CACD,CAAA,CACH,CAAA,CAEJ,EACCG,EAAO,OACLI,MAAA,IAAA,CAAE,UAAU,uBAAwB,SAAAJ,EAAO,MAAM,OAAQ,CAAA,CAAA,EAE9D,EACAE,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAE,EAAA,IAACC,EAAA,CACC,MAAO,CAAC,CAAE,UAAAC,CAAA,IACRJ,EAAA,KAACK,EAAA,CACC,QAASX,EACT,UAAWa,EAAGH,EAAWN,EAAO,cAAgB,cAAc,EAC/D,SAAA,CAAA,kBAEE,OAAK,CAAA,aAAW,WAAW,UAAU,eAAe,SAErD,IAAA,CAAA,CAAA,CACF,EAEF,OAAQ,CAAC,CAAE,UAAAM,KAEPF,EAAA,IAACM,EAAA,CACC,KAAK,eACL,QAAAZ,EACA,MAAO,CACL,SAAU,+CACZ,EACA,OAAQ,CAAC,CACP,MAAO,CAAE,MAAAa,EAAO,SAAAC,EAAU,OAAAC,EAAQ,IAAAC,EAAK,KAAAC,CAAK,CAAA,IACxC,CACJ,MAAMC,EAAezB,EAAe,KACjC0B,GAASA,EAAK,QAAUN,CAAA,EAIzB,OAAAT,EAAA,KAACgB,EAAA,CACC,MAAAP,EACA,cAAgBA,GAAU,CAExBC,EAASD,CAAK,CAChB,EAEA,SAAA,CAAAP,EAAA,IAACe,EAAA,CACC,UAAWV,EACTH,EACAN,EAAO,aACH,oCACA,qCACN,EACA,KAAAe,EACA,OAAAF,EACA,IAAAC,EAEA,eAACM,EAAA,CAAsB,QAAO,GAC5B,SAAChB,MAAA,OAAA,CAAK,UAAWK,EAAG,CAACE,GAAS,eAAe,EAC1C,UAAcK,GAAA,YAAAA,EAAA,QAAS,yBAC1B,CAAA,EACF,CAAA,CACF,QACCK,EAAA,CACE,SAAe9B,EAAA,IAAK0B,GACnBb,EAAA,IAACkB,EAAA,CAEC,MAAOL,EAAK,MAEZ,SAAAb,EAAA,IAACmB,EAAA,CACE,WAAK,MAAQN,EAAK,MAAQA,EAAK,KAClC,CAAA,CAAA,EALKA,EAAK,KAOb,CAAA,EACH,CAAA,CAAA,CAAA,CAGN,CAAA,CAAA,CAGN,CACF,EACCjB,EAAO,cACLI,MAAA,IAAA,CAAE,UAAU,uBACV,SAAAJ,EAAO,aAAa,OACvB,CAAA,CAAA,EAEJ,CAAA,EACF,EACAI,EAAAA,IAAC,OAAI,UAAU,wBACb,eAACoB,EAAO,CAAA,KAAK,SAAS,SAAA,QAAA,CAAM,CAC9B,CAAA,CAAA,CAAA,CAAA,CAGN"}